<tool id="neutrons_ingress" name="Live Neutron Data Monitor"  profile="22.05" version="0.3.0">
    <requirements>
        <container shell="/bin/bash" type="docker">code.ornl.gov:4567/ndip/tool-sources/generic/ingress:0.5.0</container>
    </requirements>
    <environment_variables>
        <environment_variable name="API_KEY" inject="api_key" />
    </environment_variables>
    <command><![CDATA[
            #set $filter = $data_type.filter if $data_type.mode == "reduced" else "**"
            python3 -u /app/main.py
              --live-monitoring $live_monitor
              --ingress-previous-data $previous_data
              --facility $facility
              --instrument $instrument
              --ipts $ipts
              --pulsar-topic-prefix ""
              --data-type $data_type.mode
              --file-from-disk-filter "$filter"
              --pulsar-url pulsar://10.64.193.124:6650
              --galaxy-url $__galaxy_url__
              --galaxy-user-api-key \$API_KEY
              --galaxy-history-name "$history"
              --galaxy-user-id $__user_id__
            #if $workflow.execute == "true"
              --execute-workflow $workflow.name
              --workflow-input-label "$workflow.ingress_label"
              #for $i in $workflow.extra_inputs
                --workflow-extra-input "$i.name":"$__app__.security.encode_id(i['file'].id)"
              #end for
            #end ifs
            > >(tee -a $output) 2> >(tee -a $output >&2)
    ]]></command>
    <inputs>
        <param name="facility" type="select" label="Facility Name" optional="false">
            <option value="SNS" selected="false">SNS</option>
            <option value="HFIR">HFIR</option>
        </param>
        <param name="instrument" type="select" label="Instrument Name" optional="false">
            <options from_data_table="instruments">
                <column name="name" index="3"/>
                <column name="value" index="2"/>
                <filter type="param_value" ref="facility" column="0"/>
            </options>
        </param>
        <param name="ipts" type="text" label="IPTS" value="IPTS-" optional="false"/>
        <param name="live_monitor" type="boolean" checked="true" label="Live monitor and ingress new files"/>
        <param name="previous_data" type="boolean" checked="false" label="Ingress old files"/>
        <conditional name="data_type">
            <param name="mode" type="select" label="Data Type" value="raw" optional="false">
                        <option value="raw">Raw Data</option>
                        <option value="reduced">Reduced Data</option>
            </param>
            <when value="reduced">
                <param name="filter" type="text" label="Filter Files" value="" optional="true" help="Wildcard to filter reduced data.
                E.g. *.dat (all files in autoreduce folder, no recursion); subfolder/*.dat (.dat files in subfolder);
                **/*.dat - all .dat files in autoreduce and subfolders;
                empty string (or **) - all files in autoreduce and all subfolders.
                "/>
            </when>>
        </conditional>
        <conditional name="workflow">
            <param name="execute" type="boolean" checked="false" label="Execute workflow after ingress"/>

            <when value="true">
                <param name="name" type="text" label="Workflow Name" value="" optional="false"/>
                <param name="ingress_label" type="text" label="Input parameter name for ingress" value="" optional="false"/>
                <repeat name="extra_inputs" title="Workflow Extra Inputs">
                    <param name="name" type="text" label="Input parameter name" optional="false"/>
                    <param name="file" type="data" label="Data file"/>
                </repeat>
            </when>>
        </conditional>
        <param name="history" type="text" label="History Name" value="" optional="true" help="empty value will create history with IPTS number like IPTS-XXX"/>
    </inputs>
    <outputs>
    <data format="txt" name="output" label="Ingress $ipts data ($data_type.mode) to history ${str($history) if str($history)!='' else str($ipts)}">
        </data>
    </outputs>
    <help><![CDATA[
        A tool allows to automatically register live Neutron experimental data in Galaxy and
        run a workflow with this data as an input
    ]]></help>
</tool>
