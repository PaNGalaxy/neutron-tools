<tool id="imaginex_image_generator" name="IMAGINE-X image generator"  profile="22.05" version="0.1.0-dev" python_template_version="3.5">
  <requirements>
    <container type="docker">code.ornl.gov:4567/dnp-computational-project/instrument/brave-image-generator</container>
  </requirements>
    <command detect_errors="exit_code"><![CDATA[
        mkdir data ;
        ## cp $input ./data/input.nxs.h5
        
	    ## Run the docker container
	    
	    #if $parameterTime.useTime == True
	    	#set $timeOption = "-#-time $parameterTime.time"
	    #else
	        #set $timeOption = ""
	    #end if
	    
	    ## bash -c 'docker run -#-rm -#-init -v \$(pwd)/data:/data imaginex-image-generator -#-input_file /data/input.nxs.h5 -#-output_dir /data/out $timeOption -#-wavelength_max $wavelengthMax -#-wavelength_min $wavelengthMin' ;
        cd / ;
        find /boot "image_counts.py" || true ;
        find /ceph_test "image_counts.py" || true ;
        find /data "image_counts.py" || true ;
        find /db_backups "image_counts.py" || true ;
        find /dev "image_counts.py" || true ;
        find /etc "image_counts.py" || true ;
        find /home "image_counts.py" || true ;
        find /lib "image_counts.py" || true ;
        find /lib32 "image_counts.py" || true ;
        find /lib64 "image_counts.py" || true ;
        find /libx32 "image_counts.py" || true ;
        find /media "image_counts.py" || true ;
        find /mnt "image_counts.py" || true ;
        find /opt "image_counts.py" || true ;
        find /out "image_counts.py" || true ;
        find /root "image_counts.py" || true ;
        find /run "image_counts.py" || true ;
        find /sbin "image_counts.py" || true ;
        find /snap "image_counts.py" || true ;
        find /srv "image_counts.py" || true ;
        find /sys "image_counts.py" || true ;
        find /tmp "image_counts.py" || true ;
        find /usr "image_counts.py" || true ;
        find /var "image_counts.py" || true ;

        python /image_counts.py --input_file /data/input.nxs.h5 --output_dir /data/out $timeOption --wavelength_max $wavelengthMax --wavelength_min $wavelengthMin ;

    ]]></command>
    <inputs>
    
        <param name="input" type="data" format="h5" label="Input File">
	    </param>
	    <param name="wavelengthMin" type="float" value="1.0" label="Max Wavelength"> 
		</param>
		<param name="wavelengthMax" type="float" value="3.5" label="Max Wavelength"> 
		</param>
	    <conditional name="parameterTime">
		    <param name="useTime" type="boolean" checked="false" label="Use Time" help="Whether to use a time value."> 
		    </param>
		    <when value="true">
		        <param name="time" type="float" value="90.0" label="Time"> 
		        </param>
	    	</when>
    	</conditional>

    </inputs>
    <outputs>
	<collection name="output_files" type="list" label="Output Images">
	    <discover_datasets pattern="(?P&lt;designation&gt;.*)\.(?P&lt;ext&gt;[^\._]+)$" directory="data/out" />
	</collection>
    </outputs>
    <help><![CDATA[
        Iage generation for IMAGINE-X beamline data reduction.
    ]]></help>
</tool>
