<tool id="sample_assembly_creator" name="Sample Assembly Creator"  profile="22.05" version="0.1.0-dev" python_template_version="3.5">
  <requirements>
    <container type="docker">savannah.ornl.gov/ndip/tool-sources/direct-geometry-spectroscopy/mcu/sample-assembly-creator/release/sample-assembly-creator:v0.6.0</container>
  </requirements>
    <command detect_errors="exit_code"><![CDATA[

      mkdir ./out/ &&
      cd ./out/ &&

      echo "Copy any cylinders material files..." &&

      #import os
      #for $i, $c in enumerate($cylinders)

        #if str( $c.material_type.selector ) == "sofq":
          #set filename=os.path.basename(str($c.material_type.sofq_file.element_identifier))
          cp "${c.material_type.sofq_file}" ./$filename &&
        #end if

        #if str( $c.material_type.selector ) == "sofqe":
          #set filename=os.path.basename(str($c.material_type.sofqe_file.element_identifier))
          cp "${c.material_type.sofqe_file}" ./$filename &&
        #end if

      #end for

      echo "Copy any hollow cylinders material files..." &&

      #import os
      #for $i, $hc in enumerate($hollow_cylinders):

        #if str( $hc.material_type.selector ) == "sofq":
          #set filename=os.path.basename(str($hc.material_type.sofq_file.element_identifier))
          cp "${hc.material_type.sofq_file}" ./$filename &&
        #end if

        #if str( $hc.material_type.selector ) == "sofqe":
          #set filename=os.path.basename(str($hc.material_type.sofqe_file.element_identifier))
          cp "${hc.material_type.sofqe_file}" ./$filename &&
        #end if

      #end for

      echo "Done copying files..." &&

      python -m mcu_sample_assembly_creator.main
        --file-directory .

      #for $i, $c in enumerate($cylinders):

        #if str( $c.material_type.selector ) == "sofq":
          #set filename=os.path.basename(str($c.material_type.sofq_file.element_identifier))
          --add-cylinder "${c.radius}" "${c.height}" sofq-file "./${filename}"
        #end if

        #if str( $c.material_type.selector ) == "sofqe":
          #set filename=os.path.basename(str($c.material_type.sofqe_file.element_identifier))
          --add-cylinder "${c.radius}" "${c.height}" sofqe-file "./${filename}"
        #end if

        #if str( $c.material_type.selector ) == "predefined":
          #if str( $c.material_type.predefined_value.value ) == "aluminium":
            --add-cylinder "${c.radius}" "${c.height}" predefined "aluminium-powder-diffraction"
          #end if

          #if str( $c.material_type.predefined_value.value ) == "vanadium":
            --add-cylinder "${c.radius}" "${c.height}" predefined "vanadium-powder-diffraction"
          #end if
        #end if

      #end for

      #for $i, $hc in enumerate($hollow_cylinders):

        #if str( $hc.material_type.selector ) == "sofq":
          #set filename=os.path.basename(str($hc.material_type.sofq_file.element_identifier))
          --add-hollow-cylinder "${hc.inner_radius}" "${hc.outer_radius}" "${hc.height}" sofq-file "./${filename}"
        #end if

        #if str( $hc.material_type.selector ) == "sofqe":
          #set filename=os.path.basename(str($hc.material_type.sofqe_file.element_identifier))
          --add-hollow-cylinder "${hc.inner_radius}" "${hc.outer_radius}" "${hc.height}" sofqe-file "./${filename}"
        #end if

        #if str( $hc.material_type.selector ) == "predefined":
          #if str( $hc.material_type.predefined_value.value ) == "aluminium":
            --add-hollow-cylinder "${hc.inner_radius}" "${hc.outer_radius}" "${hc.height}" predefined "aluminium-powder-diffraction"
          #end if
          #if str( $hc.material_type.predefined_value.value ) == "vanadium":
            --add-hollow-cylinder "${hc.inner_radius}" "${hc.outer_radius}" "${hc.height}" predefined "vanadium-powder-diffraction"
          #end if
        #end if

      #end for

      && cd ../
      && tar -czvf $out_gz out;
    

    ]]></command>
    <inputs>
    
        <repeat name="cylinders" title="Cylinders">
          <param name="radius" type="float" label="Radius (mm)">
          </param>
          <param name="height" type="float" label="Height (mm)">
          </param>

          <conditional name="material_type">
            <param name="selector" type="select" value="sofq" label="Material Type">
              <option value="sofq">S(Q) File</option>
              <option value="sofqe">S(Q,E) File</option>
              <option value="predefined">Predefined</option>
            </param>
            <when value="sofq">
                <param name="sofq_file" type="data" format="txt" label="S(Q) File"/>
            </when>
            <when value="sofqe">
                <param name="sofqe_file" type="data" format="txt" label="S(Q,E) File"/>
            </when>
            <when value="predefined">
                <param name="predefined_value" type="select" label="Predifined">
                  <option value="aluminium">Aluminium</option>
                  <option value="vanadium">Vanadium</option>
                </param>
            </when>
          </conditional>
        </repeat>

        <repeat name="hollow_cylinders" title="Hollow Cylinders">
          <param name="outer_radius" type="float" label="Outer Radius (mm)">
          </param>
          <param name="inner_radius" type="float" label="Inner Radius (mm)">
          </param>
          <param name="height" type="float" label="Height (mm)">
          </param>

          <conditional name="material_type">
            <param name="selector" type="select" value="sofq" label="Material Type">
              <option value="sofq">S(Q) File</option>
              <option value="sofqe">S(Q,E) File</option>
              <option value="predefined">Predefined</option>
            </param>
            <when value="sofq">
                <param name="sofq_file" type="data" format="txt" label="S(Q) File"/>
            </when>
            <when value="sofqe">
                <param name="sofqe_file" type="data" format="txt" label="S(Q,E) File"/>
            </when>
            <when value="predefined">
                <param name="predefined_value" type="select" label="Predifined">
                  <option value="aluminium">Aluminium</option>
                  <option value="vanadium">Vanadium</option>
                </param>
            </when>
          </conditional>
      </repeat>
		
    </inputs>
    <outputs>
        <data format="gz" name="out_gz" />
    </outputs>
    <help><![CDATA[
        Create sample assembly for instrument simulation.
    ]]></help>
</tool>
<tool id="nomad-montecarlo-prototype" name="Nomad MonteCarlo" version="0.1.0" profile="22.01">
    <description>Run McStas simulation using NOMAD_NDIP instrument</description>
    <creator>
        <person name="Fahima Islam"/>
        <organization url="https://www.ornl.gov/" name="ORNL"/>
    </creator>

    <requirements>
        <container type="docker" shell="/bin/bash">savannah.ornl.gov/ndip/tool-sources/direct-geometry-spectroscopy/neumatix/nomad-montecarlo/prototypes:614d69c71e7770ad8d3c38dec258eb69c0baa2f9</container>
    </requirements>

    <command detect_errors="exit_code"><![CDATA[
        #if $instrument.instrument_choice == 'custom':
            #set $instrument_code_path = $instrument.instrument_code
            #set $spectrum_file_path = $instrument.spectrum_file
            #set $instrument_code_name = $instrument.instrument_code.name
            #set $spectrum_file_name = $instrument.spectrum_file.name
        #else
            #set $instrument_code_path = "/src/nomad-montecarlo/Incident_beam_MCstas/NOMAD_NDIP.instr"
            #set $spectrum_file_path = "/src/nomad-montecarlo/Incident_beam_MCstas/a1G0AD-2-f5.dat"
            #set $instrument_code_name = "NOMAD_NDIP.instr"
            #set $spectrum_file_name = "a1G0AD-2-f5.dat"
        #end if

        ln -s $instrument_code_path $instrument_code_name &&
        ln -s $spectrum_file_path $spectrum_file_name &&
        mcrun $instrument_code_name -d
          s3l=$s3l s3r=$s3r s3t=$s3t s3b=$s3b
          s4l=$s4l s4r=$s4r s4t=$s4t s4b=$s4b
          --ncount=$ncount --dir=outputs &&
        (mv outputs/*.mcpl.gz $out_mcpl || true)
    ]]></command>

    <inputs>
        <conditional name="instrument">
            <param name="instrument_choice" type="select" label="Select Instrument">
                <option value="nomad" selected="true">Nomad</option>
                <option value="custom">Provide your own instrument files</option>
            </param>
            <when value="nomad"/>
            <when value="custom">
                <param name="instrument_code" type="data" format="txt" label="Instrument Source (.instr)" optional="false"/>
                <param name="spectrum_file" type="data" format="txt" label="Source Spectrum (.dat)" optional="false"/>
            </when>
        </conditional>

        <section name="input_parameters" title="Optional Input Parameters" expanded="false">
            <param name="s3l" type="float" value="1.1" label="s3 left"/>
            <param name="s3r" type="float" value="1.1" label="s3 right"/>
            <param name="s3t" type="float" value="1.1" label="s3 top"/>
            <param name="s3b" type="float" value="1.1" label="s3 bottom"/>
            <param name="s4l" type="float" value="1.1" label="s4 left"/>
            <param name="s4r" type="float" value="1.1" label="s4 right"/>
            <param name="s4t" type="float" value="1.1" label="s4 top"/>
            <param name="s4b" type="float" value="1.1" label="s4 bottom"/>
            <param name="ncount" type="text" value="1e7" label="Number of particles"/>
        </section>
    </inputs>

    <outputs>
        <data format="gz" name="out_mcpl" label="MCPL Output File"/>
    </outputs>

    <help><![CDATA[
        **Nomad MonteCarlo**

        This Galaxy tool runs McStas simulations using the NOMAD_NDIP instrument.

        ### Usage:
        - **Nomad**: uses default instrument and spectrum built into the container.
        - **Provide your own instrument files**: upload your custom `.instr` and `.dat` files.
        - You can also tweak collimator aperture parameters and number of simulated particles.

        Repository: https://code.ornl.gov/ndip/tool-sources/direct-geometry-spectroscopy/neumatix/nomad-montecarlo
    ]]></help>
</tool>
