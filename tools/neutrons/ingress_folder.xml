<?xml version="1.0"?>
<tool name="Register Data Folder" id="neutrons_ingress_folder" version="0.1.0" profile="22.05">
    <description>in Galaxy </description>
    <requirements>
        <container type="docker">python:3.10-bullseye</container>
    </requirements>
    <command detect_errors="exit_code"><![CDATA[
      mkdir output &&
      python -c "import glob; [print(f) for f in glob.glob('$folder/' + ('$filter' or '**'), recursive=True)]" |
      while IFS= read -r file; do
        if [ -f \$file ]; then
         relative_path="\${file#$folder}";
         relative_path="\${relative_path#/}";
         parent=\${relative_path%/*};
         if [ "\$parent" != "\$relative_path" ]; then
           mkdir -p "output/\$parent";
         fi;
         ln -s "\$file" "output/\$relative_path";
        fi;
      done
    ]]></command>
    <inputs>
        <param name="folder" type="text" label="Folder to Ingress" value="" optional="false"/>
        <param name="filter" type="text" label="Filter Files" value="" optional="true" help="Wildcard to filter ingressed data.
        E.g. *.dat (all .dat files in the folder, no recursion); subfolder/*.dat (.dat files in subfolder);
        **/*.dat - all .dat files in the folder and subfolders;
        empty string (or **) - all files in the folder and all subfolders.
        "/>
        <param name="collection_name" type="text" label="New collection name" value="" optional="true"/>
    </inputs>
    <outputs>
        <collection type="list" name="output_collection" label="#if $collection_name then $collection_name else $folder">
            <discover_datasets format="binary" match_relative_path="True" pattern="__designation__" recurse="true" directory="output"/>
        </collection>
    </outputs>
    <help>
    </help>
</tool>
