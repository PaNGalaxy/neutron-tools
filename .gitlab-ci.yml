stages:
  - build
  - test

variables:
  GIT_STRATEGY: clone
  CONTAINER_URL: "${CI_REGISTRY_IMAGE}"

# This import is for the func_rse_docker_* functions
before_script:
  - curl https://code.ornl.gov/rse-deployment/rse-sharables/raw/master/rse-bash-modules.sh -O
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - source rse-bash-modules.sh
  - func_rse_docker_cleanup

after_script:
  - curl https://code.ornl.gov/rse-deployment/rse-sharables/raw/master/rse-bash-modules.sh -O
  - source rse-bash-modules.sh
  - func_rse_docker_cleanup
  - sudo chown -R gitlab-runner .
  - sudo rm -rf /galaxy

service-build:
  stage: build
  script:
    - >    
      docker build
      -f dockerfiles/Dockerfile 
      -t galaxy_tools .
    - docker tag galaxy_tools $CONTAINER_URL:$CI_COMMIT_SHORT_SHA
    - docker tag galaxy_tools $CONTAINER_URL:latest
    - docker push $CONTAINER_URL:latest
    - docker push $CONTAINER_URL:$CI_COMMIT_SHORT_SHA
  when: manual
  tags:
    - rse-multi-builder

testing:
  stage: test
  script:
    - sudo mkdir -p /galaxy
    - CHANGED_FILES=$(git diff --name-only $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA | grep 'tools/neutrons/')
    - TESTS_RUN=false
    - if [ ! -z "$CHANGED_FILES" ]; then
        for FILE in $CHANGED_FILES; do
          TEST_FILE="test_"$(basename $FILE)
          if [[ -f "tools/neutrons/$TEST_FILE" ]]; then
            echo "Running test for $TEST_FILE"
            docker run -v /var/run/docker.sock:/var/run/docker.sock
            -v `pwd`/tools:/`pwd`/tools
            -v `pwd`/tool_data:`pwd`/tool_data
            --workdir `pwd`/tools/neutrons 
            -v /tmp:/tmp 
            -v `pwd`:/output
            code.ornl.gov:4567/ndip/galaxy-tools planemo test --galaxy_root /galaxy --docker --no_conda_auto_init --test_output /output/junit_output.xml "tools/neutrons/$TEST_FILE"
            TESTS_RUN=true
          else
            echo "No test file found for $FILE"
          fi
        done
      fi
    - |
      if [ "$TESTS_RUN" = false ]; then
        echo '<?xml version="1.0" encoding="UTF-8"?>
        <testsuite tests="0" failures="0" name="no_tests_run">
          <testcase classname="none" name="no tests"/>
        </testsuite>' > junit_output.xml
      fi
    - ls -la
    - cat junit_output.xml
  artifacts:
    when: always
    paths:
      - junit_output.xml
    reports:
      junit: junit_output.xml
  tags:
    - rse-multi-builder

