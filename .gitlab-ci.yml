stages:
  - build
  - test
  - push

variables:
  GIT_STRATEGY: clone
  CONTAINER_URL: "${CI_REGISTRY_IMAGE}"

# This import is for the func_rse_docker_* functions
before_script:
  - curl https://code.ornl.gov/rse-deployment/rse-sharables/raw/master/rse-bash-modules.sh -O
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - source rse-bash-modules.sh
  - func_rse_docker_cleanup

after_script:
  - curl https://code.ornl.gov/rse-deployment/rse-sharables/raw/master/rse-bash-modules.sh -O
  - source rse-bash-modules.sh
  - func_rse_docker_cleanup
  - sudo chown -R gitlab-runner .
  - sudo rm -rf /galaxy

service-build:
  stage: build
  script:
    - >    
      docker build
      -f dockerfiles/Dockerfile 
      -t galaxy_tools .
    - docker tag galaxy_tools $CONTAINER_URL:$CI_COMMIT_SHORT_SHA
    - docker tag galaxy_tools $CONTAINER_URL:latest
    - docker push $CONTAINER_URL:latest
    - docker push $CONTAINER_URL:$CI_COMMIT_SHORT_SHA
  rules:
    - if: $CI_COMMIT_BRANCH == "prototype"
      when: never
    - when: manual
  tags:
    - rse-multi-builder


testing:
  stage: test
  script:
    - sudo mkdir -p /galaxy
    - sudo mkdir -p tools/neutrons
    - CHANGED_FILES=$(git diff --name-only $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA | grep 'tools/neutrons/')
    - echo "changed files - $CHANGED_FILES"
    - |
      if [ -z "$CHANGED_FILES" ]; then
        echo "No files have changed in the tools/neutrons/ directory, creating a default JUnit report."
        echo '<?xml version="1.0" encoding="UTF-8"?>' > tools/neutrons/junit_output.xml
        echo '<testsuite tests="0" failures="0" errors="0" skipped="0" name="no_tests_run">' >> tools/neutrons/junit_output.xml
        echo '  <testcase classname="none" name="no tests"/>' >> tools/neutrons/junit_output.xml
        echo '</testsuite>' >> tools/neutrons/junit_output.xml
      else
        echo "Changed files detected, proceeding with tests."
        for FILE_PATH in $CHANGED_FILES; do
          FILE_NAME=$(basename $FILE_PATH)
          if [[ "$FILE_NAME" == *.xml ]]; then
            echo "Running test for $FILE"
            docker run -v /var/run/docker.sock:/var/run/docker.sock \
            -v `pwd`/tools:/`pwd`/tools \
            -v `pwd`/tool_data:`pwd`/tool_data \
            --workdir `pwd`/tools/neutrons \
            -v /tmp:/tmp \
            code.ornl.gov:4567/ndip/galaxy-tools \
            planemo test \
            --galaxy_url https://calvera-test.ornl.gov \
            --galaxy_user_key $CALVERA_TEST_API_KEY \
            --tool_data_path test-data \
            "$FILE_NAME"
          else
            echo "Skipping non-XML file $FILE_PATH"
          fi
        done
      fi
    - cat tools/neutrons/junit_output.xml
  artifacts:
    when: always
    paths:
      - tools/neutrons/junit_output.xml
    reports:
      junit: tools/neutrons/junit_output.xml
  rules:
    - if: $CI_COMMIT_BRANCH == "prototype"
      when: never
    - when: always
  tags:
    - rse-multi-builder

push_dev_tools:
  stage: push
  script:
    - echo "$CALVERA_TEST_SSH_KEY" > key
    - chmod 400 key
    - >
      python3 utils/push_tools.py 
      --source-directory "tools/neutrons"
      --ssh-key-path key 
      --remote-user cloud 
      --remote-host calvera-test.ornl.gov
      --remote-directory /srv/galaxy/local_tools/neutrons-dev/
  rules: 
    - if: $CI_COMMIT_BRANCH == "prototype"
      when: always
    - when: never
  tags:
    - rse-multi-builder