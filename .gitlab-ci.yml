stages:
  - build
  - test

variables:
  GIT_STRATEGY: clone
  CONTAINER_URL: "${CI_REGISTRY_IMAGE}"

# This import is for the func_rse_docker_* functions
before_script:
  - curl https://code.ornl.gov/rse-deployment/rse-sharables/raw/master/rse-bash-modules.sh -O
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - source rse-bash-modules.sh
  - func_rse_docker_cleanup

after_script:
  - curl https://code.ornl.gov/rse-deployment/rse-sharables/raw/master/rse-bash-modules.sh -O
  - source rse-bash-modules.sh
  - func_rse_docker_cleanup
  - sudo chown -R gitlab-runner .
  - sudo rm -rf /galaxy

service-build:
  stage: build
  script:
    - >    
      docker build
      -f dockerfiles/Dockerfile 
      -t galaxy_tools .
    - docker tag galaxy_tools $CONTAINER_URL:$CI_COMMIT_SHORT_SHA
    - docker tag galaxy_tools $CONTAINER_URL:latest
    - docker push $CONTAINER_URL:latest
    - docker push $CONTAINER_URL:$CI_COMMIT_SHORT_SHA
  when: manual
  tags:
    - rse-multi-builder


testing:
  stage: test
  script:
    - sudo mkdir /galaxy
    - >  
      docker run -it -v /var/run/docker.sock:/var/run/docker.sock
      -v `pwd`/tools:/galaxy-tools/tools 
      -v `pwd`/tool_data:/galaxy-tools/tool_data 
      --workdir /galaxy-tools/tools/neutrons 
      -v /tmp:/tmp 
      dummy-image planemo test --galaxy_root /galaxy --docker --tool_data_path /tmp
  tags:
    - rse-multi-builder
