stages:
  - build
  - test

variables:
  GIT_STRATEGY: clone
  CONTAINER_URL: "${NDIP_DOCKER_REPOSITORY}/${CI_PROJECT_PATH}"

# This import is for the func_rse_docker_* functions
before_script:
  - curl https://code.ornl.gov/rse-deployment/rse-sharables/raw/master/rse-bash-modules.sh -O
  - docker login -u $NDIP_DOCKER_USER -p $NDIP_DOCKER_PASSWORD $NDIP_DOCKER_REPOSITORY
  - source rse-bash-modules.sh
  - func_rse_docker_cleanup

after_script:
  - curl https://code.ornl.gov/rse-deployment/rse-sharables/raw/master/rse-bash-modules.sh -O
  - source rse-bash-modules.sh
  - func_rse_docker_cleanup
  - sudo chown -R gitlab-runner .

service-build:
  stage: build
  script:
    - >    
      docker build
      -f dockerfiles/Dockerfile 
      -t galaxy_tools .
    - docker tag galaxy_tools $CONTAINER_URL:build-$CI_COMMIT_SHORT_SHA
    - docker tag galaxy_tools $CONTAINER_URL:latest
    - docker push $CONTAINER_URL:latest
    - docker push $CONTAINER_URL:build-$CI_COMMIT_SHORT_SHA
  when: manual
  tags:
    - rse-multi-builder

testing:
  stage: test
  variables:
    ENVIRONMENT: "calvera-test"
    GALAXY_URL: "https://calvera-test.ornl.gov"
    API_KEY: $CALVERA_TEST_API_KEY
    ADMIN_KEY: $CALVERA_TEST_ADMIN_KEY
  script:
    - echo "Running tests for all tools."
    - cd `pwd`/tools/neutrons
    - TEST_FOLDERS=`find . -type d -name retired -prune -o -type d -name dockerfiles -prune -o -type f -name "*.xml" -exec grep -l "<test>" {} + | awk -F/ 'BEGIN { OFS="/"; } { $NF=""; sub(/\/$/, ""); print }' | sort -u | sed 's/^\.\///'`
    - echo testing in $TEST_FOLDERS
    - GLOBAL_ERROR=0
    - |
      for FOLDER in $TEST_FOLDERS
      do
        docker run -v `pwd`:`pwd` --workdir `pwd`/$FOLDER  $CONTAINER_URL \
          planemo test --galaxy_root /galaxy --docker --no_conda_auto_init \
          --test_output_json `pwd`/test_output_${FOLDER}.json \
          --test_output_junit `pwd`/test_output_${FOLDER}.xml \
          --galaxy_url  $GALAXY_URL \
          --galaxy_user_key $API_KEY \
          --galaxy_admin_key $ADMIN_KEY 2>&1 | tee docker_output.log || ERROR=1
        if grep -q "No tests were executed" docker_output.log && [ "$CI_COMMIT_BRANCH" == "main" ]; then
          echo "Ignoring error: 'no tests were executed'"
          ERROR=0
        fi
        GLOBAL_ERROR=$((GLOBAL_ERROR | ERROR))
      done
    - cd -
    - |
      if [ "$CI_PIPELINE_SOURCE" = "schedule" ] || [ "$CI_PIPELINE_SOURCE" = "web" ]; then
        docker run \
          -v `pwd`:`pwd` \
          --workdir `pwd` \
          -e CI_PIPELINE_ID \
          -e CI_PROJECT_URL \
          -e PROMETHEUS_URL \
          -e ENVIRONMENT \
          $CONTAINER_URL python3 scripts/push_to_gateway.py tools/neutrons
      fi
    - exit $GLOBAL_ERROR
  artifacts:
    when: always
    reports:
      junit: tools/neutrons/test_output*.xml
  tags:
    - rse-multi-builder
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      when: always
    - if: '$CI_COMMIT_BRANCH == "main"'
      variables:
        ENVIRONMENT: "calvera"
        GALAXY_URL: "https://calvera.ornl.gov"
        API_KEY: $CALVERA_API_KEY
        ADMIN_KEY: $CALVERA_ADMIN_KEY
      when: always
    - when: never

interactive-tools-testing:
  stage: test
  script:
    - >
      docker build
      -f dockerfiles/Dockerfile.interactive_test
      -t galaxy_tools .
    # Create test_results directory for artifacts
    - mkdir -p test_results
    # Run tests with --push-metrics if scheduled or web
    - |
      if [ "$CI_PIPELINE_SOURCE" = "schedule" ] || [ "$CI_PIPELINE_SOURCE" = "web" ]; then
        docker run -e GALAXY_URL="https://calvera-test.ornl.gov" -e API_KEY=$ANDREW_API_KEY \
          -e CI_PIPELINE_ID -e CI_PROJECT_URL -e PROMETHEUS_URL \
          -v $(pwd)/test_results:/src/test_results galaxy_tools python tests/interactive_tools.py --push-metrics
      else
        docker run -e GALAXY_URL="https://calvera-test.ornl.gov" -e API_KEY=$ANDREW_API_KEY \
          -v $(pwd)/test_results:/src/test_results galaxy_tools
      fi
  artifacts:
    when: always
    paths:
      - test_results/
    reports:
      junit: test_results/interactive_tests_results.xml
  tags:
    - rse-multi-builder
  rules:
    - if: '$CI_PIPELINE_SOURCE == "schedule"'
      when: always
    - when: manual
      allow_failure: true
