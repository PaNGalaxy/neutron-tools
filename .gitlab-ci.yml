stages:
  - build
  - test

variables:
  GIT_STRATEGY: clone
  CONTAINER_URL: "${CI_REGISTRY_IMAGE}"

# This import is for the func_rse_docker_* functions
before_script:
  - sudo apt-get update && sudo apt-get install -y python3 python3-pip
  - sudo pip3 install planemo
  - planemo --version
  - curl https://code.ornl.gov/rse-deployment/rse-sharables/raw/master/rse-bash-modules.sh -O
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - source rse-bash-modules.sh
  - func_rse_docker_cleanup

after_script:
  - curl https://code.ornl.gov/rse-deployment/rse-sharables/raw/master/rse-bash-modules.sh -O
  - source rse-bash-modules.sh
  - func_rse_docker_cleanup
  - sudo chown -R gitlab-runner .
  - sudo rm -rf /galaxy

service-build:
  stage: build
  script:
    - >    
      docker build
      -f dockerfiles/Dockerfile 
      -t galaxy_tools .
    - docker tag galaxy_tools $CONTAINER_URL:$CI_COMMIT_SHORT_SHA
    - docker tag galaxy_tools $CONTAINER_URL:latest
    - docker push $CONTAINER_URL:latest
    - docker push $CONTAINER_URL:$CI_COMMIT_SHORT_SHA
  when: manual
  tags:
    - rse-multi-builder

testing:
  stage: test
  script:
    - sudo mkdir -p /galaxy
    - sudo mkdir -p tools/neutrons
    - CHANGED_FILES=$(git diff --name-only $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA | grep 'tools/neutrons/')
    - echo "changed files - $CHANGED_FILES"
    - |
      if [ -z "$CHANGED_FILES" ]; then
        echo "No files have changed in the tools/neutrons/ directory, creating a default JUnit report."
        echo '<?xml version="1.0" encoding="UTF-8"?>' > tools/neutrons/junit_output.xml
        echo '<testsuite tests="0" failures="0" errors="0" skipped="0" name="no_tests_run">' >> tools/neutrons/junit_output.xml
        echo '  <testcase classname="none" name="no tests"/>' >> tools/neutrons/junit_output.xml
        echo '</testsuite>' >> tools/neutrons/junit_output.xml
      else
        echo "Changed files detected, proceeding with tests."
        for FILE_PATH in $CHANGED_FILES; do
          FILE_NAME=$(basename $FILE_PATH)
          if [[ "$FILE_NAME" == *.xml ]]; then
            echo "Running test for $FILE"
            planemo test --test_output $(pwd)/tools/neutrons/junit_output.xml --galaxy_url https://calvera-test.ornl.gov --galaxy_user_key $CALVERA_TEST_API_KEY --test_data tools/neutrons/test-data tools/neutrons/"$FILE_NAME"
          else
            echo "Skipping non-XML file $FILE_PATH"
          fi
        done
      fi
    - cat tools/neutrons/junit_output.xml
  artifacts:
    when: always
    paths:
      - tools/neutrons/junit_output.xml
    reports:
      junit: tools/neutrons/junit_output.xml
  tags:
    - rse-multi-builder

