stages:
  - build
  - test

variables:
  GIT_STRATEGY: clone
  CONTAINER_URL: "${CI_REGISTRY_IMAGE}"

# This import is for the func_rse_docker_* functions
before_script:
  - sudo apt-get update && sudo apt-get install -y python3 python3-pip
  - sudo pip3 install planemo
  - planemo --version
  - curl https://code.ornl.gov/rse-deployment/rse-sharables/raw/master/rse-bash-modules.sh -O
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - source rse-bash-modules.sh
  - func_rse_docker_cleanup

after_script:
  - curl https://code.ornl.gov/rse-deployment/rse-sharables/raw/master/rse-bash-modules.sh -O
  - source rse-bash-modules.sh
  - func_rse_docker_cleanup
  - sudo chown -R gitlab-runner .
  - sudo rm -rf /galaxy

service-build:
  stage: build
  script:
    - >    
      docker build
      -f dockerfiles/Dockerfile 
      -t galaxy_tools .
    - docker tag galaxy_tools $CONTAINER_URL:$CI_COMMIT_SHORT_SHA
    - docker tag galaxy_tools $CONTAINER_URL:latest
    - docker push $CONTAINER_URL:latest
    - docker push $CONTAINER_URL:$CI_COMMIT_SHORT_SHA
  when: manual
  tags:
    - rse-multi-builder

testing:
  stage: test
  script:
    - sudo mkdir -p /galaxy
    - sudo mkdir -p tools/neutrons
    - sudo mkdir -p tools/neutrons/test-data
    - pwd
    - ls -la tools/neutrons/test-data
    - echo "Running tests for all tools."
    - planemo test --test_output $(pwd)/tools/neutrons/junit_output.xml --galaxy_url https://calvera-test.ornl.gov --galaxy_user_key $CALVERA_TEST_API_KEY --test_data tools/neutrons/test-data tools/neutrons
  artifacts:
    when: always
    paths:
      - tools/neutrons/junit_output.xml
    reports:
      junit: tools/neutrons/junit_output.xml
  tags:
    - rse-multi-builder
