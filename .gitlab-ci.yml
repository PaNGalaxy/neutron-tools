stages:
  - build
  - test

variables:
  GIT_STRATEGY: clone
  CONTAINER_URL: "${CI_REGISTRY_IMAGE}"

# This import is for the func_rse_docker_* functions
before_script:
  - curl https://code.ornl.gov/rse-deployment/rse-sharables/raw/master/rse-bash-modules.sh -O
  - docker login -u $CI_REGISTRY_USER -p $CI_REGISTRY_PASSWORD $CI_REGISTRY
  - source rse-bash-modules.sh
  - func_rse_docker_cleanup

after_script:
  - curl https://code.ornl.gov/rse-deployment/rse-sharables/raw/master/rse-bash-modules.sh -O
  - source rse-bash-modules.sh
  - func_rse_docker_cleanup
  - sudo chown -R gitlab-runner .

service-build:
  stage: build
  script:
    - >    
      docker build
      -f dockerfiles/Dockerfile 
      -t galaxy_tools .
    - docker tag galaxy_tools $CONTAINER_URL:$CI_COMMIT_SHORT_SHA
    - docker tag galaxy_tools $CONTAINER_URL:latest
    - docker push $CONTAINER_URL:latest
    - docker push $CONTAINER_URL:$CI_COMMIT_SHORT_SHA
  when: manual
  tags:
    - rse-multi-builder

testing:
  stage: test
  script:
    - echo "Running tests for all tools."
    - cd `pwd`/tools/neutrons
    - TEST_FOLDERS=`find . -type d -name retired -prune -o -type d -name dockerfiles -prune -o -type f -name "*.xml" -exec grep -l "<test>" {} + | awk -F/ 'BEGIN { OFS="/"; } { $NF=""; sub(/\/$/, ""); print }' | sort -u | sed 's/^\.\///'`
    - echo testing in $TEST_FOLDERS
    - |
      for FOLDER in $TEST_FOLDERS
      do
        docker run -v `pwd`:`pwd` --workdir `pwd`/$FOLDER code.ornl.gov:4567/ndip/galaxy-tools planemo test --galaxy_root /galaxy --docker --no_conda_auto_init --test_output_junit `pwd`/junit_output_${FOLDER}.xml --galaxy_url https://calvera-test.ornl.gov --galaxy_user_key $CALVERA_TEST_API_KEY --galaxy_admin_key $CALVERA_TEST_ADMIN_KEY      
      done
  artifacts:
    when: always
    reports:
      junit: tools/neutrons/junit_output*.xml
  tags:
    - rse-multi-builder
  rules:
    - if: '$CI_COMMIT_BRANCH == "dev"'
      when: always
    - if: '$CI_COMMIT_BRANCH == "main"'
      when: manual
    - when: never
