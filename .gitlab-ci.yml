stages:
  - build
  - push
  - test


variables:
  GIT_STRATEGY: clone
  CONTAINER_URL: "${NDIP_DOCKER_REPOSITORY}/${CI_PROJECT_PATH}"

# This import is for the func_rse_docker_* functions
before_script:
  - curl https://code.ornl.gov/rse-deployment/rse-sharables/raw/master/rse-bash-modules.sh -O
  - docker login -u $NDIP_DOCKER_USER -p $NDIP_DOCKER_PASSWORD $NDIP_DOCKER_REPOSITORY
  - source rse-bash-modules.sh
  - func_rse_docker_cleanup

after_script:
  - curl https://code.ornl.gov/rse-deployment/rse-sharables/raw/master/rse-bash-modules.sh -O
  - source rse-bash-modules.sh
  - func_rse_docker_cleanup
  - sudo chown -R gitlab-runner .

service-build:
  stage: build
  script:
    - >
      docker build
      -f dockerfiles/Dockerfile
      -t galaxy_tools .
    - docker tag galaxy_tools $CONTAINER_URL:prototype
    - docker push $CONTAINER_URL:prototype
  when: manual
  tags:
    - rse-multi-builder

push_dev_tools:
  stage: push
  script:
    - echo "$PULSAR_SSH_KEY" > key
    - chmod 400 key
    - >
      rsync -e "ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i key"
      --rsync-path "sudo rsync" -rv --delete
      tools/neutrons/ cloud@calvera-test.ornl.gov:/srv/galaxy/local_tools/neutrons-dev/
    - >
      ssh -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -i key
      cloud@calvera-test.ornl.gov
      sudo /root/update_prototype_tools.sh
      /srv/galaxy/local_tools/neutrons-dev
      /srv/galaxy/config/tool_conf_prototype.xml
      /etc/nova_dashboard/prototype_tools.json
  rules:
    - if: $CI_COMMIT_BRANCH == "prototype"
      when: always
    - when: never
  tags:
    - rse-multi-builder

testing:
  stage: test
  script:
    - sudo apt-get install -y libxml2-utils
    - echo Before SHA $CI_COMMIT_BEFORE_SHA
    - echo After SHA $CI_COMMIT_SHA
    - git fetch --unshallow
    - CHANGED_FILES=$(git diff --diff-filter=AM --name-only $CI_COMMIT_BEFORE_SHA $CI_COMMIT_SHA -- "*.xml" | tr '\n' ' ')
    - files_with_test=""
    - |
      for file in $CHANGED_FILES; do
          # Check if the file has tests
          if xmllint --xpath "//*[local-name()='test']" "$file" | grep -q "<test>" ; then
              files_with_test="$files_with_test $file"
          fi
      done
    - |
      if [ -z "$files_with_test" ]; then
        echo "No tools with tests have changed, so no tests will run."
        touch $(pwd)/junit_output.xml
      else
          echo "will execute tests for $files_with_test"
          docker run -v `pwd`:/`pwd` \
                     -u `id -u`:`id -g` \
                     --workdir `pwd` \
                      $CONTAINER_URL:prototype planemo test --galaxy_root /galaxy --docker --no_conda_auto_init --test_output_junit `pwd`/junit_output.xml --galaxy_url https://calvera-test.ornl.gov --galaxy_user_key $CALVERA_TEST_API_KEY --galaxy_admin_key $CALVERA_TEST_ADMIN_KEY $files_with_test
      fi
  artifacts:
    reports:
      junit: junit_output.xml
    when: on_success
  tags:
    - rse-multi-builder
